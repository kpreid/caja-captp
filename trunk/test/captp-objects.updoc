# Copyright 2007 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

-------------------------------------------------------------------------------
-- This file was derived from E-on-CL's CapTP; improvements should be shared --
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
The following code is boilerplate to load a Cajita module with collecting the return value. This code should be folded into some Cajita or EoJS library.

  ? def js := <import:org.erights.eojs.jsTools>; null

  ? def cajita := <import:org.erights.eojs.cajita>; null

  ? def exports; null
  
  ? def oldNewModuleHandler := cajitaPriv.getNewModuleHandler()
  > cajitaPriv.setNewModuleHandler(js.asObject([
  >   "handle" => js.asFunction(fn newModule {
  >     bind exports := newModule.instantiate(cajitaPriv.get___(), oldNewModuleHandler.getImports())
  >   })
  > ]))
  
  ? EoJS.asyncLoad("../src/captp.out.js")
  
  ? interp.waitAtTop(exports)

-------------------------------------------------------------------------------

This is a placeholder. We *should* have tests for the operation of each of these tables, but they haven't been written yet; so we just check that they instantiate successfully.

  ? exports["ExportsTable"]()
  # value: <exportsTable [
  #        ], free: [ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]>

  ? exports["ProxiesTable"]()
  # value: <proxiesTable [
  #        ], free: [ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15]>

  ? exports["NearGiftTable"](def makeWeakPtr {})
  # value: <nearGiftTable>

  ? exports["PromiseGiftTable"](def makeWeakPtr {}, def nonceLocatorPromise {})
  # value: <promiseGiftTable>

  ? exports["NonceLocator"](def pgt {},
  >                             def ngt {},
  >                             "fake-id",
  >                             def capTPMgr {},
  >                             def swissTable {})
  # value: <nonceLocator>

  ? exports["LocatorUnum"]("fake-id", def swissTable {}, def capTPMgr {})
  # value: <locatorUnum>
